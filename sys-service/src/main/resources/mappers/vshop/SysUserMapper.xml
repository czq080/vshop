<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vigoss.shop.sys.dao.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.vigoss.shop.sys.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 21 20:20:06 CST 2018.
        -->
        <id column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_user_id" property="createUserId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="dept_id" property="deptId" jdbcType="BIGINT"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 21 20:20:06 CST 2018.
        -->
        delete from sys_user
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.vigoss.shop.sys.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 21 20:20:06 CST 2018.
        -->
        insert into sys_user (user_id, username, password,
        email, mobile, status,
        create_user_id, create_time, dept_id
        )
        values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
        #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{deptId,jdbcType=BIGINT}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.vigoss.shop.sys.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 21 20:20:06 CST 2018.
        -->
        update sys_user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        mobile = #{mobile,jdbcType=VARCHAR},
        status = #{status,jdbcType=TINYINT},
        create_user_id = #{createUserId,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        dept_id = #{deptId,jdbcType=BIGINT}
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 21 20:20:06 CST 2018.
        -->
        select user_id, username, password, email, mobile, status, create_user_id, create_time,
        dept_id
        from sys_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon May 21 20:20:06 CST 2018.
        -->
        select user_id, username, password, email, mobile, status, create_user_id, create_time,
        dept_id
        from sys_user
    </select>
    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId}
	</select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>

    <select id="queryByUserName" resultMap="BaseResultMap">
		select * from sys_user where username = #{username}
	</select>


    <select id="queryList" resultMap="BaseResultMap">
        select u.*, (select d.name from sys_dept d where d.dept_id = u.dept_id) deptName from sys_user u
        <where>
            <if test="createUserId != null">
                and `create_user_id` = #{createUserId}
            </if>
            <if test="username != null and username.trim() != ''">
                and u.`username` like concat('%',#{username},'%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by u.${sidx} ${order}
            </when>
            <otherwise>
                order by u.user_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>
    <!--<select id="queryListByBean" resultType="com.shop.entity.UserWindowDto">-->
        <!--select-->
        <!--id,username name,dept_Id-->
        <!--from sys_user-->
        <!--WHERE 1=1-->
        <!--<if test="name != null and name.trim() != ''">-->
            <!--AND username LIKE concat('%',#{name},'%')-->
        <!--</if>-->
    <!--</select>-->

    <select id="queryTotal" resultType="int">
        select count(*) from sys_user
        <where>
            <if test="createUserId != null">
                and `create_user_id` = #{createUserId}
            </if>
            <if test="username != null and username.trim() != ''">
                and `username` like concat('%',#{username},'%')
            </if>
            <if test="status != null and status.trim() != ''">
                and `status` = #{status}
            </if>
        </where>
    </select>
    <update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword}
			where user_id = #{userId} and password = #{password}
	</update>
    <delete id="deleteBatch">
        delete from sys_user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from sys_user_role where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>